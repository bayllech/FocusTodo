name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 触发条件: 推送 v开头的标签，如 v1.0.0
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
            args: ''
          - os: macos-latest
            platform: macos
            args: '--target universal-apple-darwin'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'app/package-lock.json'

      - name: Install frontend dependencies
        run: |
          cd app
          npm ci

      - name: Build Tauri app
        run: |
          cd app
          npm run tauri:build -- ${{ matrix.args }}

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            app/src-tauri/target/release/bundle/msi/*.msi
            app/src-tauri/target/release/bundle/nsis/*.exe

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            app/src-tauri/target/release/bundle/dmg/*.dmg
            app/src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write  # 允许创建 Release 和上传资源

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: ./release-assets/windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-artifacts
          path: ./release-assets/macos

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-assets/windows/**/*
            release-assets/macos/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate checksums
        run: |
          cd release-assets
          find . -type f \( -name "*.msi" -o -name "*.exe" -o -name "*.dmg" \) -exec sha256sum {} \; > SHA256SUMS
          cat SHA256SUMS

      - name: Upload checksums to release
        uses: softprops/action-gh-release@v1
        with:
          files: release-assets/SHA256SUMS
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
